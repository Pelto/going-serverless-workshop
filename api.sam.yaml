AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: A Rock Paper Scissors API stack.

Resources:

  GetGameFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Gets game status
      Handler: index.handler
      Runtime: nodejs6.10
      CodeUri: lambdas/get-game/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: !GetAtt GameTable.Arn
      Events:
        GetGame:
          Type: Api
          Properties:
            Method: get
            Path: /api/games/{gameId}


  CreateGameFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Creates a game
      Handler: index.handler
      Runtime: nodejs6.10
      CodeUri: lambdas/create-game/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - dynamodb:PutItem
            Resource: !GetAtt GameTable.Arn
      Events:
        CreateGame:
          Type: Api
          Properties:
            Method: post
            Path: /api/games


  MakeMoveFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Makes a move
      Handler: index.handler
      Runtime: nodejs6.10
      CodeUri: lambdas/make-move/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
              Resource: !GetAtt GameTable.Arn
      Events:
        MakeMove:
          Type: Api
          Properties:
            Method: post
            Path: /api/moves


  GetLeaderboardFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Gets leaderboard
      Handler: index.handler
      Runtime: nodejs6.10
      CodeUri: lambdas/get-leaderboard/
      Environment:
        Variables:
          SCORE_TABLE: !Ref ScoreTable
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:Query
                - dynamodb:Scan
              Resource: !Sub ${ScoreTable.Arn}/index/scoreIndex
      Events:
        Leaderboard:
          Type: Api
          Properties:
            Method: get
            Path: /api/leaderboard


  UpdateScoreFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Updates the score
      Handler: index.handler
      Runtime: nodejs6.10
      CodeUri: lambdas/update-score/
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:UpdateItem
              Resource: !GetAtt ScoreTable.Arn
      Environment:
        Variables:
          SCORE_TABLE: !Ref ScoreTable
      Events:
        GameEvent:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt GameTable.StreamArn
            StartingPosition: LATEST


  GameTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: gameId
          AttributeType: S
      KeySchema:
        - AttributeName: gameId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES


  ScoreTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: playerId
          AttributeType: S
        - AttributeName: score
          AttributeType: N
        - AttributeName: gameTitle
          AttributeType: S
      KeySchema:
        - AttributeName: playerId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
        - IndexName: scoreIndex
          KeySchema:
            - AttributeName: gameTitle
              KeyType: HASH
            - AttributeName: score
              KeyType: RANGE
          Projection:
            ProjectionType: INCLUDE
            NonKeyAttributes:
              - playerId
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
